{"version":3,"sources":["components/Input.js","helpers/format.js","components/itemCard.js","components/Card.js","App.js","index.js"],"names":["Input","min","max","value","descricao","onChange","className","style","display","margin","type","event","target","numberFormat","Intl","NumberFormat","formatNumber","numberToBeFormatted","format","itemCard","itens","positivo","juros","valorFinal","Math","abs","valorJuros","porcentagem","Card","dados","width","parcela","App","useState","valor","setValor","taxa","setTaxa","periodo","setPeriodo","array","setArray","errorMessage","setErrorMessage","taxaMinValue","taxaMaxValue","periodoMinValue","periodoMaxValue","useEffect","arrayParcelas","montante","index","pow","push","toFixed","styles","map","i","key","color","fontWeight","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3840b012.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Input({min, max, value, descricao, onChange}) {\r\n\r\n      const handle = (event) => {\r\n        onChange(event.target.value);\r\n      };\r\n\r\n    return (\r\n        <div className=\"input-field col s4\">\r\n        <span style={{\r\n          display: \"block\",\r\n          margin: \"0rem 0\"\r\n        }}>\r\n          <label >{descricao}</label>\r\n        </span>\r\n        <input type=\"number\" value={value} onChange={handle} min={min} max={max} />\r\n      </div>\r\n    )\r\n}\r\n","/**\r\n * ReferÃªncia ao objeto que formata nÃºmeros\r\n */\r\nconst numberFormat = Intl.NumberFormat('pt-BR');\r\n\r\nfunction formatNumber(numberToBeFormatted) {\r\n  return numberFormat.format(numberToBeFormatted);\r\n}\r\n\r\nfunction formatPercentage(numberToBeFormatted) {\r\n  if (numberToBeFormatted) {\r\n    return numberToBeFormatted.toFixed(2).replace('.', ',') + '%';\r\n  }\r\n}\r\n\r\nexport { formatNumber, formatPercentage };","import React from 'react'\r\n\r\nimport { formatNumber } from '../helpers/format';\r\n\r\nexport default function itemCard({itens}) {\r\n\r\n    const positivo = itens.juros >= 0 ? true : false;   \r\n    return (\r\n        <div >\r\n            <ul>\r\n                <li className={positivo ? 'text-green' : 'text-red'}>R$ {formatNumber(itens.valorFinal ?? 0)}</li>\r\n                <li className={positivo ? 'text-green' : 'text-red'}>{ positivo ?  '+' : '-' }R$ {formatNumber(Math.abs(itens.valorJuros) ?? 0)}</li>\r\n                <li className={positivo ? 'text-blue' : 'text-orange'}>{formatNumber(itens.porcentagem ?? 0)}%</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ItemCard from './itemCard'\r\n\r\nexport default function Card({dados}) {\r\n    return (\r\n        <div className=\"card space flex-row\" style={{\r\n            width: \"180px\"\r\n          }} >\r\n         <p className=\"item\">{dados.parcela}</p>\r\n         <ItemCard itens={dados} />\r\n      </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Input from './components/Input';\nimport Card from './components/Card';\n\nexport default function App() {\n\n  const [valor, setValor] = useState(0);\n  const [taxa, setTaxa] = useState(0);\n  const [periodo, setPeriodo] = useState(1);\n\n  const [array, setArray] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [taxaMinValue] = useState(-12);\n  const [taxaMaxValue ] = useState(12);\n  const [periodoMinValue] = useState(1);\n  const [periodoMaxValue]  = useState(36);\n\n  useEffect(() => {\n    \n    let arrayParcelas = [];\n    let montante = 0;  \n    setErrorMessage('');\n\n    if (taxa < taxaMinValue || taxa > taxaMaxValue) {\n      setErrorMessage(\n        `A taxa de juros deve ser entre ${taxaMinValue} e ${taxaMaxValue}`\n      );\n      setArray(arrayParcelas);\n      return;\n    }\n\n    if (periodo < periodoMinValue || periodo > periodoMaxValue) {\n      setErrorMessage(\n        `O período deve ser entre ${periodoMinValue} e ${periodoMaxValue}`\n      );\n      setArray(arrayParcelas);\n      return;\n    }\n\n    for (let index = 1; index <= periodo; index++) {\n      montante = valor * Math.pow((1 + (taxa/100)), index);\n      arrayParcelas.push({\n        parcela: index,\n        valorFinal: montante.toFixed(2),\n        valorJuros: (montante - valor).toFixed(2),\n        porcentagem: (((montante - valor) / valor) * 100).toFixed(2),\n        juros: taxa\n      });   \n    }\n    setArray(arrayParcelas);\n  }, [valor, taxa, periodo ])\n\n  const handleValor = (valor) => {\n    setValor(valor)\n  };\n\n  const handleTaxa = (taxa) => {\n    setTaxa(taxa)\n  };\n\n  const handlePeriodo = (periodo) => {\n    setPeriodo(periodo)\n  };\n\n  return (\n    <div>\n        <h3 className=\"center\">React - Juros Compostos</h3>\n        <div >\n        <form className=\"col s12 container\">\n          <div className=\"row\">\n            <Input value={valor} min={0} max={9999999999} descricao={\"Montante Inicial:\"} onChange={handleValor} />\n            <Input value={taxa} min={taxaMinValue} max={taxaMaxValue} descricao={\"Taxa de juros mensal:\"} onChange={handleTaxa} />\n            <Input value={periodo} min={periodoMinValue} max={periodoMaxValue} descricao={\"Período (meses):\"} onChange={handlePeriodo} />\n          </div>\n        </form>\n        <div style={styles.errorMessage}>{errorMessage}</div>\n        <div className=\"flex-row borderCard\" >\n        {  valor > 0 ? array.map((dados, i) => {                     \n           return (<Card key={i} dados={dados}/>) \n        }) : ''}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst styles = {\n  errorMessage: {\n    color: 'red',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}